<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:component-scan base-package="*"/>

    <!-- 配置数据源 -->

    <!-- 导入资源文件 -->
    <context:property-placeholder location="classpath:db.properties"/>

    <!-- 配置阿里巴巴数据源 -->
    <bean id="dataSource"
          class="com.alibaba.druid.pool.DruidDataSource">
        <property name="username" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>

        <property name="initialSize" value="${jdbc.initPoolSize}"/>
        <property name="maxActive" value="${jdbc.maxPoolSize}"/>

    </bean>
    <!-- 配置Hibernate的SessionFactory实例:通过Spring提供的LocalSessionFactoryBean配置-->

    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <!-- 配置数据源属性 -->
        <property name="dataSource" ref="dataSource"/>

        <!-- 配置Hibernate配置文件的位置及名称-->
        <!--<property name="configLocation" value="classpath:XML/hibernate.cfg.xml"/>-->
        <!-- 使用hibernateProperties属性来配置Hibernate原生的属性 -->
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>

                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.show_sql">true</prop>

                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>

        <!-- 配置Hibernate 映射文件的位置及名称,可以使用通配符-->
        <property name="mappingLocations"  value="classpath:/XML/*.hbm.xml">
            <!-- 使用通配符的方式无法加载到hbm.xml文件-->
            <!--<list>-->
                <!--<value>Book.hbm.xml</value>-->
                <!--<value>Account.hbm.xml</value>-->
            <!--</list>-->
        </property>
    </bean>


    <!-- 配置Spring的声明式事务-->

    <!-- 1.配置事务管理器-->
    <bean class="org.springframework.orm.hibernate4.HibernateTransactionManager"
          id="hibernateTransactionManager">
        <property name="dataSource" ref="dataSource"/>
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <!-- 2.配置事务属性,需要事务管理器-->
    <tx:advice id="txAdvice" transaction-manager="hibernateTransactionManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="*"/>
            <tx:method name="purchase" propagation="REQUIRES_NEW"/>
        </tx:attributes>
    </tx:advice>

    <!-- 3.配置事务切点并把切点和事务属性关联起来-->
    <aop:config>
        <aop:pointcut id="txPointCout" expression="execution(* Service.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCout"/>
    </aop:config>


</beans>